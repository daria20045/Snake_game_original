#DB Importing needed modules
from random import randrange # WA - Importing randrange function from the random module
from turtle import * # WA - Importing all symbols from the turtle module
from freegames import square, vector # WA - Importing specific functions from the freegames module

#DB Intializing the objects that are included within the GUI of the game.
food = vector(0, 0)
snake = [vector(10, 0)]
aim = vector(0, -10)

#JM By using the arrow keys, you change the direction where the snake is heading 
def change(x, y):
    aim.x = x
    aim.y = y

#DB If the snake's head hits the walls (boundaries) the game ends
def inside(head):
    return -200 < head.x < 190 and -200 < head.y < 190

#JM Function that makes the snake move, The body of the snake follows its head.
def move():
    head = snake[-1].copy()
    head.move(aim)

#DB If the snake runs into itself or encounters a wall, its head is removed and a red block is added red where the head was and the game ends.
    if not inside(head) or head in snake:
        square(head.x, head.y, 9, 'red')
        update()
        return
#DB If the snake does not run into a wall or run into itself, 1 block is added to the head (length).
    snake.append(head)

# DB If the snake encounters food (the green block) the length of the snake is printed out in the console and a new block of food is spawned at random within the given range.
    if head == food:
        print('Snake:', len(snake))
        food.x = randrange(-15, 15) * 10
        food.y = randrange(-15, 15) * 10
    else:
# DB - If the snake's head did not encounter food, the head segment is removed and is replaced by the red block from the previous statement. 
        snake.pop(0)
    clear()

#JM The snake's dimension and colour.
    for body in snake:
        square(body.x, body.y, 9, 'black')

#JM The dimension and colour of the food.
    square(food.x, food.y, 9, 'green')
    update()
    # WA - Set a timer to call the move function after 100 milliseconds
    ontimer(move, 100)

#WA The initial placement of the snake and food. The angle by which the snake's direction changes when you use the arrows to move it is defined.
setup(420, 420, 370, 0)  # WA - etting up the game window with specific dimensions and coordinates
hideturtle()  # WA - Hiding the default turtle cursor
tracer(False)  # WA - Turning off animation tracing
listen()  # WA - Setting up listening for keyboard events

# WA - Functions to change snake direction based on arrow key presses
onkey(lambda: change(10, 0), 'Right')
onkey(lambda: change(-10, 0), 'Left')
onkey(lambda: change(0, 10), 'Up')
onkey(lambda: change(0, -10), 'Down')

# WA - Start the game loop
move()
# WA - Completing the game
done()
